name: Validate and Plan Deployment

on:
  workflow_dispatch:
    inputs:
      environmentName:
        description: 'Environment Name'
        required: true
      vmImageName:
        description: 'VM Image Name'
        required: true
      serviceConnection:
        description: 'Azure Service Connection'
        required: true
      subscriptionId:
        description: 'Azure Subscription ID'
        required: true
      location:
        description: 'Deployment Location'
        required: true
      folderPath:
        description: 'Folder Path for ARM Template'
        required: true
      fileName:
        description: 'File Name for ARM Template'
        required: true

jobs:
  validation:
    runs-on: ${{ inputs.vmImageName }}
    name: 'Run preflight validation'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          path: ${{ inputs.environmentName }}

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Validate Deployment
        uses: azure/arm-deploy@v0.7.0
        with:
          subscriptionId: ${{ inputs.subscriptionId }}
          templateLocation: "$(github.workspace)/${{ inputs.environmentName }}/${{ inputs.folderPath }}/${{ inputs.fileName }}"
          deploymentName: 'ValidatePipelineTemplate'
          deploymentMode: Validation
        env:
          AZURE_SUBSCRIPTION: ${{ inputs.subscriptionId }}

      - name: Plan Deployment
        if: success()
        run: |
          az account set -s ${{ inputs.subscriptionId }}
          az deployment sub what-if \
            --location ${{ inputs.location }} \
            --template-file "$(github.workspace)/${{ inputs.environmentName }}/${{ inputs.folderPath }}/${{ inputs.fileName }}"

      - name: Copy Artifacts
        if: success()
        shell: pwsh
        run: |
          $bicepFilePath = "$(github.workspace)/${{ inputs.environmentName }}/${{ inputs.folderPath }}/${{ inputs.fileName }}"
          $fileContent = Get-Content -Path $bicepFilePath
          $filteredContent = @()
          foreach ($line in $fileContent) {
            if (!$line.StartsWith("//")) {
              $filteredContent += $line
            }
          }
          $fileContent = $filteredContent -join [Environment]::NewLine
          $trailingCharacters = [regex]::Matches($fileContent, 'components(.{1,})') | % { $_.Groups[1].Value }
          $moduleNames = @()
          foreach($string in $trailingCharacters){
              $start = $string.IndexOf("/") + 1
              $end   = $string.LastIndexOf("/")
              $moduleNames += $string.Substring($start, $end - $start)
          }
          $paths = @()
          $destination = "$(github.workspace)/artifacts"
          foreach ($moduleName in $moduleNames) {
              $paths += "$(github.workspace)/${{ inputs.environmentName }}/components/$moduleName"
              Get-ChildItem $paths -Recurse | ForEach-Object {
                  $dest = $_.FullName.Replace($paths, "$destination/components/$moduleName")
                  if (!(Test-Path (Split-Path $dest))) {
                      New-Item (Split-Path $dest) -ItemType Directory | Out-Null
                  }
                  Copy-Item $_.FullName $dest -Recurse
              }
              $paths = @()
          }
          $mainPath= @()
          $mainPath += "$(github.workspace)/${{ inputs.environmentName }}/${{ inputs.folderPath }}"
          Get-ChildItem "$(github.workspace)/${{ inputs.environmentName }}/${{ inputs.folderPath }}" -Recurse | ForEach-Object {
              $dest = $_.FullName.Replace($mainPath, "$destination/${{ inputs.folderPath }}")
              if (!(Test-Path (Split-Path $dest))) {
                  New-Item (Split-Path $dest) -ItemType Directory | Out-Null
              }
              Copy-Item $_.FullName $dest -Recurse
          }

      - name: Upload Artifacts
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.environmentName }}
          path: $(github.workspace)/artifacts
